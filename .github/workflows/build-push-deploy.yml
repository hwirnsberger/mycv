name: Build and deploy project

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
env:
  IMAGE_NAME: mycv
  GITHUB_WORKFLOW_URL: https://github:com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v1

      - name: Use Cache For Maven Repository
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: maven-cache-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Create and push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

          docker build -f src/main/docker/Dockerfile -t $IMAGE_ID:$VERSION .

          docker push $IMAGE_ID:$VERSION

      - name: Deploy to Test Namespace Kubernetes
        uses: WyriHaximus/github-action-helm3@v1.0.0
        with:
          exec: |
            helm dependency update helm/mycv
            helm upgrade --install --wait --debug --set githubActionRun=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID -n mycv-test mycv helm/mycv
          kubeconfig: '${{ secrets.KUBECONFIG }}'

      - name: Test with Maven
        run: |
          echo "first"
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          echo "second"
          export NODE_PORT=$(kubectl --kubeconfig=kubeconfig get --namespace mycv-test -o jsonpath="{.spec.ports[0].nodePort}" services mycv)
          echo "third"
          export NODE_IP=$(kubectl --kubeconfig=kubeconfig get nodes --namespace mycv-test -o jsonpath="{.items[0].status.addresses[1].address}")
          echo "fourth"
          mvn -B verify -DBASE_URI=$NODE_PORT:$NODE_IP --file pom.xml

      - name: Deploy to Prod Namespace Kubernetes
        uses: WyriHaximus/github-action-helm3@v1.0.0
        with:
          exec: |
            helm dependency update helm/mycv
            helm upgrade --install --wait --debug --set githubActionRun=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID -n mycv mycv helm/mycv
          kubeconfig: '${{ secrets.KUBECONFIG }}'